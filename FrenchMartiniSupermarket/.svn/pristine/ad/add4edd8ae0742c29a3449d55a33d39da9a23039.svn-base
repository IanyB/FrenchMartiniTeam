using EntityFrameworkModels;
using System;
using System.Data;
using System.Data.OleDb;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Transactions;

namespace ExcelExportFiles
{
    public static class ExcelManager
    {
        public static DataTable GetContents(string filePath)
        {
            DataTable contents = new DataTable("newtable");

            string connectionString = @"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" +
                filePath +
                ";Extended Properties=Excel 12.0;";

            using (OleDbConnection connection = new OleDbConnection(connectionString))
            {
                connection.Open();

                string selectSql = @"SELECT * FROM [Sales$B1:E]";

                using (OleDbDataAdapter adapter = new OleDbDataAdapter(selectSql, connection))
                {
                    adapter.Fill(contents);
                }
            }

            return contents;
        }

        private static void InsertExcelFileDataInMSSQLServerDB(
            DateTime reportDate,
            DataTable contentsTable,
            SupermarketEntities msSQLServerContext)
        {
            using (TransactionScope scope = new TransactionScope())
            {
                string localShopName = contentsTable.Rows[0][0].ToString().Trim();

                var localShop = msSQLServerContext.LocalShops.FirstOrDefault(ls => ls.LocalShopName == localShopName);

                if (localShop == null)
                {
                    localShop = new LocalShop
                    {
                        LocalShopName = localShopName
                    };

                    msSQLServerContext.LocalShops.Add(localShop);
                    msSQLServerContext.SaveChanges();
                }

                int rowsCount = contentsTable.Rows.Count;
                int colsCount = contentsTable.Columns.Count;

                var report = new Report
                {
                    LocalShopId = localShop.LocalShopId,
                    ReportDate = reportDate,
                    ReportTotalSum = decimal.Parse(contentsTable.Rows[rowsCount - 1][3].ToString())
                };

                msSQLServerContext.Reports.Add(report);
                msSQLServerContext.SaveChanges();

                for (int row = 2; row < rowsCount - 1; row++)
                {
                    int productId = int.Parse(contentsTable.Rows[row][0].ToString());
                    double productQuantity = double.Parse(contentsTable.Rows[row][1].ToString());
                    decimal productUnitPrice = decimal.Parse(contentsTable.Rows[row][2].ToString());
                    decimal productTotalSum = decimal.Parse(contentsTable.Rows[row][3].ToString());

                    var sale = new Sale
                    {
                        ReportId = report.ReportId,
                        ProductId = productId,
                        ProductQuantity = productQuantity,
                        ProductUnitPrice = productUnitPrice,
                        ProductTotalSum = productTotalSum
                    };

                    msSQLServerContext.Sales.Add(sale);
                }

                msSQLServerContext.SaveChanges();

                scope.Complete();
            }
        }

        public static void LoadExcelReportsFromZipFile(string zipFile)
        {
            string executionFolder = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
            string salesReportsFolder = Path.Combine(executionFolder, "SalesReports");

            ZipFileManager.Extract(zipFile, salesReportsFolder);

            DirectoryInfo salesReportsDirectory = new DirectoryInfo(salesReportsFolder);

            DirectoryInfo[] reportDirectories = salesReportsDirectory.GetDirectories();

            using (var msSQLServerContext = new SupermarketEntities())
            {
                foreach (DirectoryInfo reportDirectory in reportDirectories)
                {
                    DateTime reportDate = DateTime.ParseExact(
                        reportDirectory.Name,
                        "dd-MMM-yyyy",
                        CultureInfo.InvariantCulture);

                    FileInfo[] reportFiles = reportDirectory.GetFiles("*.xls");

                    foreach (FileInfo reportFile in reportFiles)
                    {
                        DataTable contentsTable = ExcelManager.GetContents(reportFile.FullName);

                        InsertExcelFileDataInMSSQLServerDB(reportDate, contentsTable, msSQLServerContext);
                    }
                }
            }
        }
    }
}
