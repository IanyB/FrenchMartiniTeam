using EntityFrameworkModels;
using ExcelExportFiles;
using OpenAccessModels;
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using System.Transactions;

internal class SupermarketClient
{
    /// <summary>
    /// Should be executed only once - when we need  to populate the
    /// MS SQL Server database.
    /// </summary>
    private static void CopyMySQLDataToMSSQLServer()
    {
        using (SupermarketModel mySQLContext = new SupermarketModel())
        {
            using (SupermarketEntities msSQLServerContext = new SupermarketEntities())
            {
                foreach (var mySQLVendor in mySQLContext.Vendors)
                {
                    var msSQLServerVendor = new EntityFrameworkModels.Vendor
                    {
                        VendorName = mySQLVendor.VendorName
                    };

                    msSQLServerContext.Vendors.Add(msSQLServerVendor);
                    msSQLServerContext.SaveChanges();
                }

                foreach (var mySQLUnit in mySQLContext.Units)
                {
                    var msSQLServerUnit = new EntityFrameworkModels.Unit
                    {
                        UnitName = mySQLUnit.UnitName
                    };

                    msSQLServerContext.Units.Add(msSQLServerUnit);
                    msSQLServerContext.SaveChanges();
                }

                foreach (var mySQLProduct in mySQLContext.Products)
                {
                    var msSQLServerProduct = new EntityFrameworkModels.Product
                    {
                        VendorId = mySQLProduct.VendorID,
                        UnitId = mySQLProduct.UnitID,
                        ProductName = mySQLProduct.ProductName,
                        BasePrice = mySQLProduct.BasePrice
                    };

                    msSQLServerContext.Products.Add(msSQLServerProduct);
                    msSQLServerContext.SaveChanges();
                }
            }
        }
    }

    private static void InsertExcelFileDataInMSSQLServerDB(
        DateTime reportDate,
        DataTable contentsTable,
        SupermarketEntities msSQLServerContext)
    {
        using (TransactionScope scope = new TransactionScope())
        {
            string localShopName = contentsTable.Rows[0][0].ToString().Trim();

            var localShop = msSQLServerContext.LocalShops.FirstOrDefault(ls => ls.LocalShopName == localShopName);

            if (localShop == null)
            {
                localShop = new LocalShop
                {
                    LocalShopName = localShopName
                };

                msSQLServerContext.LocalShops.Add(localShop);
                msSQLServerContext.SaveChanges();
            }

            int rowsCount = contentsTable.Rows.Count;
            int colsCount = contentsTable.Columns.Count;

            var report = new Report
            {
                LocalShopId = localShop.LocalShopId,
                ReportDate = reportDate,
                ReportTotalSum = decimal.Parse(contentsTable.Rows[rowsCount - 1][3].ToString())
            };

            msSQLServerContext.Reports.Add(report);
            msSQLServerContext.SaveChanges();

            for (int row = 2; row < rowsCount - 1; row++)
            {
                int productId = int.Parse(contentsTable.Rows[row][0].ToString());
                double productQuantity = double.Parse(contentsTable.Rows[row][1].ToString());
                decimal productUnitPrice = decimal.Parse(contentsTable.Rows[row][2].ToString());
                decimal productTotalSum = decimal.Parse(contentsTable.Rows[row][3].ToString());

                var sale = new Sale
                {
                    ReportId = report.ReportId,
                    ProductId = productId,
                    ProductQuantity = productQuantity,
                    ProductUnitPrice = productUnitPrice,
                    ProductTotalSum = productTotalSum
                };

                msSQLServerContext.Sales.Add(sale);
            }

            msSQLServerContext.SaveChanges();

            scope.Complete();
        }
    }

    private static void LoadExcelReportsFromZipFile(string zipFile)
    {
        string executionFolder = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
        string salesReportsFolder = Path.Combine(executionFolder, "SalesReports");

        ZipFileManager.Extract(zipFile, salesReportsFolder);

        DirectoryInfo salesReportsDirectory = new DirectoryInfo(salesReportsFolder);

        DirectoryInfo[] reportDirectories = salesReportsDirectory.GetDirectories();

        using (var msSQLServerContext = new SupermarketEntities())
        {
            foreach (DirectoryInfo reportDirectory in reportDirectories)
            {
                DateTime reportDate = DateTime.ParseExact(
                    reportDirectory.Name,
                    "dd-MMM-yyyy",
                    CultureInfo.InvariantCulture);

                FileInfo[] reportFiles = reportDirectory.GetFiles("*.xls");

                foreach (FileInfo reportFile in reportFiles)
                {
                    DataTable contentsTable = ExcelManager.GetContents(reportFile.FullName);

                    InsertExcelFileDataInMSSQLServerDB(reportDate, contentsTable, msSQLServerContext);
                }
            }
        }
    }

    private static void Main()
    {
        //LoadExcelReportsFromZipFile(@"F:\Telerik Academy\Databases\Teamwork\Sample-Sales-Reports.zip");

        //ExcelManager.GetContents(@"F:\Telerik Academy\Databases\Teamwork\21-Jul-2013\Zmeyovo-Sales-Report-21-Jul-2013.xls");
    }
}
